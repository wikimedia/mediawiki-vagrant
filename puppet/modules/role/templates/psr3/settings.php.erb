# <?php

use MediaWiki\WikiMap\WikiMap;

call_user_func( function() {
	global $wgMWLoggerDefaultSpi, $wgDebugLogFile, $wgDebugLogGroups;

	$wgMWLoggerDefaultSpi = array(
		'class' => '\\MediaWiki\\Logger\\MonologSpi',
		'factory' => function ( ...$args ) {
			global $wgDebugLogFile, $wgDebugLogGroups;

			foreach ( $wgDebugLogGroups as $group => $target ) {
				$level = null;
				if ( is_array( $target ) ) {
					// some advanced settings like sample rate are ignored
					$level = $target['level'] ?? null;
					$target = $target['destination'] ?? null;
					if ( !$target ) {
						throw new Exception( '$wgDebugLogGroups: destination field is required' );
					}
				}
				if ( !$target ) {
					$args[0]['loggers'][$group] = array( 'blackhole' );
					continue;
				}
				$args[0]['loggers'][$group] = array(
					'processors' => array( 'wiki', 'psr', 'pid', 'uid', 'web' ),
					'handlers' => array( $group ),
				);
				$args[0]['handlers'][$group] = array(
					'class' => '\\Monolog\\Handler\\StreamHandler',
					'args' => array_filter( array( $target, $level ) ),
					'formatter' => 'line',
				);
			}

			return new \MediaWiki\Logger\MonologSpi( ...$args );
		},
		'args' => array( array(
			'loggers' => array(
				'@default' => array(
					'processors' => array( 'wiki', 'psr', 'pid', 'uid', 'web' ),
					'handlers' => array( 'default' ),
				),
				'runJobs' => array(
					'processors' => array( 'wiki', 'psr', 'pid' ),
					'handlers' => array( 'default' ),
				),
				'profileoutput' => array(
					'handlers' => array( 'profiler' ),
					'processors' => array( 'psr' ),
				),
			),
			'processors' => array(
				'wiki' => array(
					'class' => '\\MediaWiki\\Logger\\Monolog\\WikiProcessor',
				),
				'psr' => array(
					'class' => '\\Monolog\\Processor\\PsrLogMessageProcessor',
				),
				'pid' => array(
					'class' => '\\Monolog\\Processor\\ProcessIdProcessor',
				),
				'uid' => array(
					'class' => '\\Monolog\\Processor\\UidProcessor',
				),
				'web' => array(
					'class' => '\\Monolog\\Processor\\WebProcessor',
				),
			),
			'handlers' => array(
				'default' => array(
					'class' => '\\Monolog\\Handler\\StreamHandler',
					'args' => array( $wgDebugLogFile ?: '/vagrant/logs/mediawiki-' . WikiMap::getCurrentWikiId() . '-debug.log' ),
					'formatter' => 'line',
				),
				'blackhole' => array(
					'class' => '\\Monolog\\Handler\\NullHandler',
				),
				'profiler' => array(
					'class' => '\\Monolog\\Handler\\StreamHandler',
					'args' => array( '/vagrant/logs/mediawiki-' . WikiMap::getCurrentWikiId() . '-profiler.log' ),
					'formatter' => 'profiler',
				),
			),
			'formatters' => array(
				'line' => array(
					'class' => '\\MediaWiki\\Logger\\Monolog\\LineFormatter',
					'args' => array(
						"%datetime% %extra.wiki% %channel% %level_name%: %message% %context% %exception%\n",
						'Y-m-d H:i:s',
						true, // allowInlineLineBreaks
						true, // ignoreEmptyContextAndExtra
						true, // includeStacktraces
					),
				),
				'profiler' => array(
					'class' => '\\Monolog\\Formatter\\LineFormatter',
					'args' => array( "%datetime% %message%\n\n", null, true, true ),
				),
			),
		) ),
	);

} );
