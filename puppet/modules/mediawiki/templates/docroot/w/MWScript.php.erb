<?php
// This file is managed by Puppet.
// Based on operations/mediawiki-config.git multiversion/MWScript.php @9abf4ac
if ( PHP_SAPI !== 'cli' ) {
	echo "This script can only be run from the command line.\n";
	exit( 1 );
}

/**
 * Run a MediaWiki script based on the parameters (like --wiki) given to CLI.
 *
 * The first argument must be the relative (to MediaWiki) script file path.
 * If only a filename is given, it will be assumed to reside in /maintenance.
 * The second argument must be the --wiki parameter. This is to avoid
 * any "options with args" ambiguity (see Maintenance.php).
 *
 * When the actual script is run, $argv[0] (this file's name) will be not be
 * kept. Also, $argv[1] (the script path) will be changed to the script file
 * name. All other arguments will be preserved.
 *
 * @return string Absolute MediaWiki script path
 */
function getMWScriptWithArgs() {
	global $argv;
	if ( count( $argv ) < 2 ) {
		fwrite( STDERR, "This script can only be run from the command line.\n" );
		exit( 1 );
	}

	# Security check -- don't allow scripts to run as privileged users
	$gids = posix_getgroups();
	foreach ( $gids as $gid ) {
		$info = posix_getgrgid( $gid );
		if ( $info && in_array( $info['name'], array( 'vagrant', 'root' ) ) ) {
			fwrite( STDERR, "Cannot run a MediaWiki script as a user in the " .
				"group {$info['name']}\n" );
			fwrite( STDERR, <<<EOT
Maintenance scripts should generally be run using sudo -u www-data which
is available to all wikidev users.  Running a maintenance script as a
privileged user risks compromise of the user account.

You should run this script as the www-data user:

 sudo -u www-data -- <command>

EOT
			);
			exit( 1 );
		}
	}

	// FIXME run.php guesses directories differently
	$relFile = $argv[1]; // the script file to run
    if ( strpos( $relFile, '/' ) === 0
		|| strpos( $relFile, './' ) === 0
		|| strpos( $relFile, '../' ) === 0
		|| strpos( $relFile, ':' ) !== false
		|| substr( $relFile, -4 ) !== '.php'
	) {
		// absolute URL, relative URL, or run.php special syntax, don't pass
		// to MWMultiVersion::getMediaWikiCli
		$relFile = null;
	} elseif ( strpos( $relFile, '/' ) === false ) {
		// If no MW directory is given then assume this is a /maintenance script
		$relFile = "maintenance/$relFile"; // convenience
	}

	# Check if a --wiki param was given...
	# Maintenance.php will treat $argv[1] as the wiki if it doesn't start '-'
	if (
		!isset( $argv[2] ) ||
		!preg_match( '%^([^-./][^./]*(\s|$)|--wiki(=|$))%', $argv[2] )
	) {
		// Insert a `--wiki=...` parameter pointing to the default wiki
		array_splice( $argv, 2, 0, "--wiki=<%= scope['::mediawiki::db_name'] %>" );
	}

	require_once( '<%= @script_dir %>/MWMultiVersion.php' );
	array_shift( $argv ); // MWMultiVersion does not expect a wrapper
	$runPhp = MWMultiVersion::getMediaWikiCli( 'maintenance/run.php' );
	if ( $relFile ) {
		$argv[0] = MWMultiVersion::getMediaWikiCli( $relFile ) ;
	}
	array_unshift( $argv, $runPhp ); // run.php does expect itself as the wrapper

	# PHPUnit uses $_SERVER['argv']
	$_SERVER['argv'] = $argv;

	return $runPhp;
}

// Run the script!
try {
	$script = getMWScriptWithArgs();
} catch ( InvalidArgumentException $e ) {
	fwrite( STDERR, $e->getMessage() . "\n" );
	exit( 1 );
}
require_once $script;
